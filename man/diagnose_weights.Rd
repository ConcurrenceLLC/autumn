% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diagnose_weights.R
\name{diagnose_weights}
\alias{diagnose_weights}
\title{Diagnose convergence of weighted data to targets}
\usage{
diagnose_weights(data, target = NULL, weights = NULL)
}
\arguments{
\item{data}{A data frame (tibble) or matrix containing all variables in the
\code{target} argument. The data frame can contain additional variables.}

\item{target}{A list of target proportions in the population of interest.
This argument can be one of two formats: a list of named numeric vectors,
or a data frame (tibble) with three columns (variable, variable level, and
proportion) in order. No level may have a negative proportion or an NA, and
each variable should sum to 1. If this argument is not provided, and
\code{data} was constructed by \code{\link{harvest}}, then target will be
read from environment.}

\item{weights}{Optionally, a numeric vector of weights equal in length to
the number of rows in \code{data}. If this argument is not provided, then
data must contain a weight column named "weights" or one of the automatic
names for weight columns generated by \code{\link{harvest}}}
}
\value{
A data frame with seven rows: "variable" (the variable among the
  target variables), "level" (the specific value of that variable),
  "prop_original" (the unweighted proportion in \code{data}),
  "prop_weighted" (the weighted proportion in \code{data}),
  "target" (the proportion expressed in \code{target}),
  "error_original" (absolute deviation in the unweighted \code{data}),
  "error_weighted" (absolute deviation in \code{data} after applying
  weights).
}
\description{
This function assesses the convergence of data to target proportions given
weights and returns diagnostic results.
}
\examples{
\dontrun{
# Sample pipe workflow
respondent_data \%>\%
  harvest(ns_target) \%>\%
  diagnose_weights()

# Explicit calls
result = harvest(respondent_data, ns_target)
diagnose_weights(data=result,
                 target=ns_target,
                 weights=result$weights)
}
}
